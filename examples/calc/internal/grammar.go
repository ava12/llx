// Code generated with llxgen.
package internal

import "github.com/ava12/llx/grammar"

var calcGrammar = &grammar.Grammar{
	Tokens: []grammar.Token{
		{Name: "space", Re: "\\s+", Groups: 1, Flags: 4},
		{Name: "number", Re: "-?\\d+(?:\\.\\d+)?(?:[Ee]-?\\d+)?", Groups: 1, Flags: 0},
		{Name: "name", Re: "[A-Za-z][A-Za-z0-9_]*", Groups: 1, Flags: 0},
		{Name: "op", Re: "[(),=*\\/^+-]", Groups: 1, Flags: 0},
		{Name: "func", Re: "", Groups: 1, Flags: 1},
		{Name: "(", Re: "", Groups: 1, Flags: 1},
		{Name: ",", Re: "", Groups: 1, Flags: 1},
		{Name: ")", Re: "", Groups: 1, Flags: 1},
		{Name: "=", Re: "", Groups: 1, Flags: 1},
		{Name: "-", Re: "", Groups: 1, Flags: 1},
		{Name: "+", Re: "", Groups: 1, Flags: 1},
		{Name: "*", Re: "", Groups: 1, Flags: 1},
		{Name: "/", Re: "", Groups: 1, Flags: 1},
		{Name: "^", Re: "", Groups: 1, Flags: 1},
	},
	NonTerms: []grammar.NonTerm{
		{Name: "calcGrammar", FirstState: 0},
		{Name: "expr", FirstState: 1},
		{Name: "assign", FirstState: 5},
		{Name: "func", FirstState: 8},
		{Name: "pro", FirstState: 16},
		{Name: "pow", FirstState: 19},
		{Name: "value", FirstState: 22},
		{Name: "call", FirstState: 25},
	},
	States: []grammar.State{
		{0, 0, 1, 0, 4},
		{0, 0, 0, 6, 8},
		{0, 0, 0, 8, 11},
		{0, 0, 0, 11, 14},
		{0, 0, 0, 14, 17},
		{0, 0, 0, 17, 18},
		{0, 0, 0, 18, 19},
		{0, 0, 0, 19, 23},
		{0, 0, 0, 23, 24},
		{0, 0, 0, 24, 25},
		{0, 0, 0, 25, 26},
		{0, 0, 0, 26, 28},
		{0, 0, 0, 28, 29},
		{0, 0, 0, 29, 33},
		{0, 0, 0, 33, 35},
		{0, 0, 0, 35, 36},
		{0, 0, 0, 36, 39},
		{0, 0, 0, 39, 42},
		{0, 0, 0, 42, 45},
		{0, 0, 0, 45, 48},
		{0, 0, 0, 48, 50},
		{0, 0, 0, 50, 53},
		{0, 1, 2, 53, 55},
		{0, 0, 0, 57, 61},
		{0, 0, 0, 61, 62},
		{0, 0, 0, 62, 63},
		{0, 0, 0, 63, 64},
		{0, 0, 0, 64, 69},
		{0, 0, 0, 69, 70},
		{0, 0, 0, 70, 72},
		{0, 0, 0, 72, 76},
	},
	MultiRules: []grammar.MultiRule{
		{2, 4, 6},
		{2, 55, 57},
	},
	Rules: []grammar.Rule{
		{1, -1, 1},
		{4, -1, 3},
		{5, -1, 1},
		{9, -1, 1},
		{2, -1, 1},
		{2, -1, 2},
		{-1, 2, -1},
		{9, 2, -1},
		{1, 3, 4},
		{2, 3, 4},
		{5, 3, 4},
		{-1, -1, -1},
		{9, 4, -1},
		{10, 4, -1},
		{1, 3, 4},
		{2, 3, 4},
		{5, 3, 4},
		{2, 6, -1},
		{8, 7, -1},
		{1, -1, 1},
		{2, -1, 1},
		{5, -1, 1},
		{9, -1, 1},
		{4, 9, -1},
		{2, 10, -1},
		{5, 11, -1},
		{-1, 12, -1},
		{2, 14, -1},
		{7, 13, -1},
		{1, -1, 1},
		{2, -1, 1},
		{5, -1, 1},
		{9, -1, 1},
		{-1, 12, -1},
		{6, 15, -1},
		{2, 14, -1},
		{1, 17, 5},
		{2, 17, 5},
		{5, 17, 5},
		{-1, -1, -1},
		{11, 18, -1},
		{12, 18, -1},
		{1, 17, 5},
		{2, 17, 5},
		{5, 17, 5},
		{1, 20, 6},
		{2, 20, 6},
		{5, 20, 6},
		{-1, -1, -1},
		{13, 21, -1},
		{1, -1, 5},
		{2, -1, 5},
		{5, -1, 5},
		{1, -1, -1},
		{5, 23, -1},
		{2, -1, -1},
		{2, -1, 7},
		{1, 24, 1},
		{2, 24, 1},
		{5, 24, 1},
		{9, 24, 1},
		{7, -1, -1},
		{2, 26, -1},
		{5, 27, -1},
		{-1, 28, -1},
		{1, 29, 1},
		{2, 29, 1},
		{5, 29, 1},
		{9, 29, 1},
		{7, -1, -1},
		{-1, 28, -1},
		{6, 30, -1},
		{1, 29, 1},
		{2, 29, 1},
		{5, 29, 1},
		{9, 29, 1},
	},
}
