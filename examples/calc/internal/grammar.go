// Code generated with llxgen.
package internal

import "github.com/ava12/llx/grammar"

var calcGrammar = &grammar.Grammar{
	Tokens: []grammar.Token{
		{Name: "space", Re: "\\s+", Groups: 1, Flags: 4},
		{Name: "number", Re: "-?\\d+(?:\\.\\d+)?(?:[Ee]-?\\d+)?", Groups: 1, Flags: 0},
		{Name: "name", Re: "[A-Za-z][A-Za-z0-9_]*", Groups: 1, Flags: 0},
		{Name: "op", Re: "[(),=*\\/^+-]", Groups: 1, Flags: 0},
		{Name: "func", Re: "", Groups: 1, Flags: 1},
		{Name: "(", Re: "", Groups: 1, Flags: 1},
		{Name: ",", Re: "", Groups: 1, Flags: 1},
		{Name: ")", Re: "", Groups: 1, Flags: 1},
		{Name: "=", Re: "", Groups: 1, Flags: 1},
		{Name: "-", Re: "", Groups: 1, Flags: 1},
		{Name: "+", Re: "", Groups: 1, Flags: 1},
		{Name: "*", Re: "", Groups: 1, Flags: 1},
		{Name: "/", Re: "", Groups: 1, Flags: 1},
		{Name: "^", Re: "", Groups: 1, Flags: 1},
	},
	NonTerms: []grammar.NonTerm{
		{Name: "calcGrammar", FirstState: 0},
		{Name: "expr", FirstState: 1},
		{Name: "assign", FirstState: 6},
		{Name: "func", FirstState: 9},
		{Name: "pro", FirstState: 18},
		{Name: "pow", FirstState: 22},
		{Name: "value", FirstState: 25},
		{Name: "call", FirstState: 28},
	},
	States: []grammar.State{
		{0, 0, 1, 0, 4},
		{0, 0, 0, 6, 10},
		{0, 0, 0, 10, 13},
		{0, 0, 0, 13, 16},
		{0, 0, 0, 16, 18},
		{0, 0, 0, 18, 21},
		{0, 0, 0, 21, 22},
		{0, 0, 0, 22, 23},
		{0, 0, 0, 23, 27},
		{0, 0, 0, 27, 28},
		{0, 0, 0, 28, 29},
		{0, 0, 0, 29, 30},
		{0, 0, 0, 30, 32},
		{0, 0, 0, 32, 33},
		{0, 0, 0, 33, 37},
		{0, 0, 0, 37, 39},
		{0, 0, 0, 39, 40},
		{0, 0, 0, 40, 41},
		{0, 0, 0, 41, 44},
		{0, 0, 0, 44, 47},
		{0, 0, 0, 47, 49},
		{0, 0, 0, 49, 52},
		{0, 0, 0, 52, 55},
		{0, 0, 0, 55, 57},
		{0, 0, 0, 57, 60},
		{0, 1, 2, 60, 62},
		{0, 0, 0, 64, 68},
		{0, 0, 0, 68, 69},
		{0, 0, 0, 69, 70},
		{0, 0, 0, 70, 71},
		{0, 0, 0, 71, 76},
		{0, 0, 0, 76, 77},
		{0, 0, 0, 77, 79},
		{0, 0, 0, 79, 80},
		{0, 0, 0, 80, 84},
	},
	MultiRules: []grammar.MultiRule{
		{2, 4, 6},
		{2, 62, 64},
	},
	Rules: []grammar.Rule{
		{1, -1, 1},
		{4, -1, 3},
		{5, -1, 1},
		{9, -1, 1},
		{2, -1, 1},
		{2, -1, 2},
		{1, 3, 4},
		{2, 3, 4},
		{5, 3, 4},
		{9, 2, -1},
		{1, 3, 4},
		{2, 3, 4},
		{5, 3, 4},
		{-1, -1, -1},
		{9, 5, -1},
		{10, 5, -1},
		{9, 5, -1},
		{10, 5, -1},
		{1, 3, 4},
		{2, 3, 4},
		{5, 3, 4},
		{2, 7, -1},
		{8, 8, -1},
		{1, -1, 1},
		{2, -1, 1},
		{5, -1, 1},
		{9, -1, 1},
		{4, 10, -1},
		{2, 11, -1},
		{5, 12, -1},
		{2, 15, -1},
		{7, 14, -1},
		{7, 14, -1},
		{1, -1, 1},
		{2, -1, 1},
		{5, -1, 1},
		{9, -1, 1},
		{-1, 13, -1},
		{6, 17, -1},
		{6, 17, -1},
		{2, 15, -1},
		{1, 19, 5},
		{2, 19, 5},
		{5, 19, 5},
		{-1, -1, -1},
		{11, 21, -1},
		{12, 21, -1},
		{11, 21, -1},
		{12, 21, -1},
		{1, 19, 5},
		{2, 19, 5},
		{5, 19, 5},
		{1, 23, 6},
		{2, 23, 6},
		{5, 23, 6},
		{-1, -1, -1},
		{13, 24, -1},
		{1, -1, 5},
		{2, -1, 5},
		{5, -1, 5},
		{1, -1, -1},
		{5, 26, -1},
		{2, -1, -1},
		{2, -1, 7},
		{1, 27, 1},
		{2, 27, 1},
		{5, 27, 1},
		{9, 27, 1},
		{7, -1, -1},
		{2, 29, -1},
		{5, 30, -1},
		{1, 32, 1},
		{2, 32, 1},
		{5, 32, 1},
		{7, -1, -1},
		{9, 32, 1},
		{7, -1, -1},
		{-1, 31, -1},
		{6, 34, -1},
		{6, 34, -1},
		{1, 32, 1},
		{2, 32, 1},
		{5, 32, 1},
		{9, 32, 1},
	},
}
