// Code generated with llxgen.
package internal

import "github.com/ava12/llx/grammar"

var cDataGrammar = &grammar.Grammar{
	Tokens: []grammar.Token{
		{Name: "indent", Re: "\\n[ \\t]*", Groups: 1, Flags: 4},
		{Name: "space", Re: "[ \\t]+", Groups: 1, Flags: 4},
		{Name: "comment", Re: "\\/\\*.*?\\*\\/", Groups: 1, Flags: 4},
		{Name: "number", Re: "\\d+", Groups: 1, Flags: 0},
		{Name: "name", Re: "[A-Za-z_][A-Za-z_0-9]*", Groups: 1, Flags: 0},
		{Name: "op", Re: "[{}\\[\\],;]", Groups: 1, Flags: 0},
		{Name: ",", Re: "", Groups: 1, Flags: 1},
		{Name: ";", Re: "", Groups: 1, Flags: 1},
		{Name: "typedef", Re: "", Groups: 1, Flags: 1},
		{Name: "struct", Re: "", Groups: 1, Flags: 1},
		{Name: "{", Re: "", Groups: 1, Flags: 1},
		{Name: "}", Re: "", Groups: 1, Flags: 1},
		{Name: "[", Re: "", Groups: 1, Flags: 1},
		{Name: "]", Re: "", Groups: 1, Flags: 1},
	},
	NonTerms: []grammar.NonTerm{
		{Name: "cDataGrammar", FirstState: 0},
		{Name: "var-def", FirstState: 2},
		{Name: "type-def", FirstState: 10},
		{Name: "type", FirstState: 15},
		{Name: "name", FirstState: 16},
		{Name: "size-def", FirstState: 17},
		{Name: "simple-type", FirstState: 20},
		{Name: "struct-type", FirstState: 21},
	},
	States: []grammar.State{
		{0, 0, 0, 0, 3},
		{0, 0, 0, 3, 7},
		{0, 0, 0, 7, 9},
		{0, 0, 0, 9, 10},
		{0, 0, 0, 10, 13},
		{0, 0, 0, 13, 15},
		{0, 0, 0, 15, 16},
		{0, 0, 0, 16, 17},
		{0, 0, 0, 17, 18},
		{0, 0, 0, 18, 20},
		{0, 0, 0, 20, 21},
		{0, 0, 0, 21, 23},
		{0, 0, 0, 23, 24},
		{0, 0, 0, 24, 26},
		{0, 0, 0, 26, 27},
		{0, 0, 0, 27, 29},
		{0, 0, 0, 29, 30},
		{0, 0, 0, 30, 31},
		{0, 0, 0, 31, 32},
		{0, 0, 0, 32, 33},
		{0, 0, 0, 33, 34},
		{0, 0, 0, 34, 35},
		{0, 0, 0, 35, 36},
		{0, 0, 0, 36, 38},
		{0, 0, 0, 38, 41},
		{0, 0, 0, 41, 42},
	},
	MultiRules: []grammar.MultiRule{
	},
	Rules: []grammar.Rule{
		{4, 1, 1},
		{8, 1, 2},
		{9, 1, 1},
		{-1, -1, -1},
		{4, 1, 1},
		{8, 1, 2},
		{9, 1, 1},
		{4, 3, 3},
		{9, 3, 3},
		{4, 4, 4},
		{6, 8, -1},
		{7, -1, -1},
		{12, 4, 5},
		{6, 8, -1},
		{7, -1, -1},
		{7, -1, -1},
		{6, 8, -1},
		{4, 9, 4},
		{-1, 5, -1},
		{12, 9, 5},
		{8, 11, -1},
		{4, 12, 3},
		{9, 12, 3},
		{4, 13, 4},
		{7, -1, -1},
		{12, 13, 5},
		{7, -1, -1},
		{4, -1, 6},
		{9, -1, 7},
		{4, -1, -1},
		{12, 18, -1},
		{3, 19, -1},
		{13, -1, -1},
		{4, -1, -1},
		{9, 22, -1},
		{10, 23, -1},
		{4, 24, 1},
		{9, 24, 1},
		{4, 24, 1},
		{9, 24, 1},
		{11, -1, -1},
		{11, -1, -1},
	},
}
